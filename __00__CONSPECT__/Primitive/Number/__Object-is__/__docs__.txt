`Object.is()` — это метод в JavaScript, 
  который позволяет сравнивать два значения на строгое равенство. 
  Он имеет несколько преимуществ перед другими способами сравнения, 
  такими как оператор `===` (строгое равенство) 
  и метод `Object.equals()`, если бы он существовал. 
  Вот некоторые из его преимуществ:

1. **Корректное сравнение `NaN`**: В JavaScript `NaN` 
  не равно себе по определению, то есть выражение `NaN === NaN` 
  вернёт `false`. Однако `Object.is(NaN, NaN)` вернёт `true`.

2. **Отличное поведение для `+0` и `-0`**: 
  Оператор `===` считает `+0` и `-0` равными (`+0 === -0` вернёт `true`). 
  В то время как `Object.is(+0, -0)` вернёт `false`, 
  что позволяет различать эти два значения.

3. **Сравнение идентичных типов**: 
  Хотя оператор `===` и сравнивает значения, 
  он может приводить некоторые значения к одинаковым типам. 
  Например, `null == undefined` возвращает `true`. `Object.is(null, undefined)` 
  вернёт `false`, что делает его более строгим по отношению к типам.

4. **Простота использования**: `Object.is(value1, value2)` 
  может быть удобнее в использовании по сравнению 
  с некоторыми другими подходами, так как он явно указывает намерение сравнения двух значений.

Использование `Object.is()` может быть полезно 
в специфических сценариях, когда для вас важны различия, 
которые не учитываются при использовании обычных операторов сравнения.


